C51 COMPILER V9.52.0.0   MUS                                                               10/22/2019 17:20:12 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MUS
OBJECT MODULE PLACED IN mus.OBJ
COMPILER INVOKED BY: d:\Keil1\C51\BIN\C51.EXE mus.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #define RldTmr(fr) 65536 - (11059200 / 12) / (fr << 1)
   3          #define FuDian(n) (n << 1) / 3    //附点n分音符的换算
   4           
   5          typedef unsigned char UCHAR;
   6          typedef unsigned int UINT;
   7          typedef unsigned long ULONG;
   8           
   9          sbit BUZZ = P1^6;
  10           
  11          UINT code noteFreq[] = {    //中音 1-7 和高音 1-7对应的频率列表
  12              523, 587, 659, 698, 784, 880, 988,
  13              1047, 1175, 1319, 1397, 1568, 1760, 1976
  14          };
  15          UINT code tmrRld[] = {      //中音 1-7 和高音 1-7对应的定时器重载值
  16              RldTmr(523), RldTmr(587), RldTmr(659), RldTmr(698), RldTmr(784), RldTmr(880), RldTmr(988),
  17              RldTmr(1047), RldTmr(1175), RldTmr(1319), RldTmr(1397), RldTmr(1568), RldTmr(1760), RldTmr(1976),
  18          };
  19          UCHAR code musicNote[] = {      //音名
  20              1, 2, 3, 1,
  21              1, 2, 3, 1,
  22              3, 4, 5,
  23              3, 4, 5,
  24              5, 6, 5, 4, 3, 1,
  25              5, 6, 5, 4, 3, 1,
  26              1, 5, 1,
  27              1, 5, 1
  28          };
  29          UCHAR code noteDuration[] = {       //音名对应的时值，4表示4分音符，8表示8分音符，16表示16分音符
  30              4, 4, 4, 4,
  31              4, 4, 4, 4,
  32              4, 4, 2,
  33              4, 4, 2,
  34              16, 4, 4, //  FuDian(8), 16, FuDian(8),
  35              16, 4, 4, // FuDian(8), 16, FuDian(8),
  36              4, 4, 2,       
  37              4, 4, 2
  38          };
  39          bit enable = 1, tmrFlg = 0;
  40          UCHAR T0RH = 0XFF, T0RL = 0X00;
  41           
  42          void Delay(UINT n);
  43          void PlayMusic(UCHAR speed);    //固定标准为4分音符的速度：例如speed = 108 表示一分钟扫过108个4分音符
  44           
  45          void main() {
  46   1          EA = 1;
  47   1          TMOD = 0X01;
  48   1          TH0 = T0RH;
  49   1          TL0 = T0RL;
  50   1          ET0 = 1;
  51   1          TR0 = 1;
  52   1          while (1) {
  53   2              PlayMusic(72);
  54   2              Delay(40000u);
  55   2          }
C51 COMPILER V9.52.0.0   MUS                                                               10/22/2019 17:20:12 PAGE 2   

  56   1      }
  57           
  58          void Delay(UINT n) {
  59   1          UINT i;
  60   1          for (i = 0; i < n; i++) ;
  61   1      }
  62           
  63          void PlayMusic(UCHAR speed) {
  64   1          UCHAR i;
  65   1          UCHAR idx;
  66   1          UINT cnt = 0;
  67   1          UINT durationCnt = 0;       //当前音符的时值对应的定时器计数
  68   1          UINT soundCnt = 0;          //当前音符的发声时值对应的计数值
  69   1          for (i = 0; i < sizeof (musicNote); ) {
  70   2              while (!tmrFlg) ;
  71   2              tmrFlg = 0;
  72   2              if (cnt == 0) {
  73   3                  idx = musicNote[i] - 1;
  74   3                  T0RH = tmrRld[idx] >> 8;
  75   3                  T0RL = tmrRld[idx];
  76   3                  durationCnt = (ULONG)240 * (ULONG)noteFreq[idx] / ((ULONG)noteDuration[i] * (ULONG)speed);
  77   3                  soundCnt = durationCnt - (durationCnt >> 2);        //当前音符时值的前3/4发声，后1/4静音
  78   3                  enable = 1;
  79   3                  cnt++;
  80   3              }
  81   2              else {
  82   3                  if (cnt == durationCnt) {
  83   4                      cnt = 0;
  84   4                      i++;
  85   4                  }
  86   3                  else {
  87   4                      cnt++;
  88   4                      if (cnt == soundCnt) {
  89   5                          enable = 0;
  90   5                      }
  91   4                  }
  92   3              }
  93   2          }
  94   1      }
  95           
  96          void InterruptTmr0() interrupt 1 {
  97   1          TH0 = T0RH;
  98   1          TL0 = T0RL;
  99   1          tmrFlg = 1;
 100   1          if (enable)
 101   1              BUZZ = ~BUZZ;
 102   1          else
 103   1              BUZZ = 1;
 104   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    269    ----
   CONSTANT SIZE    =    114    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
