C51 COMPILER V9.52.0.0   MMM                                                               10/23/2019 14:26:50 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MMM
OBJECT MODULE PLACED IN mmm.OBJ
COMPILER INVOKED BY: d:\Keil1\C51\BIN\C51.EXE mmm.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1                          #include<reg52.h>
   2          typedef unsigned char u8;
   3          typedef unsigned int u16;
   4          u8 which,buff[6];
   5          u8 s_1,s_2,s_3,s_4,s_5,s_6;
   6          sbit DI=P3^6;
   7          sbit LED=P3^7;
   8          u8 code right[]={1,2,3,4,5,6};
   9          u8 code distab[]={
  10          0xc0,0xF9,0xA4,0xB0,0x99,                                
  11          0x92,0x82,0xF8,0x80,0x90,                       
  12          0x88,0x83,0xC6,0xA1,0x86,                       
  13          0x8E,0xFF,0x0C,0x89,0x7F,0xBF};
  14          void delayms(u8 xms)
  15          {
  16   1              u16 i,j;
  17   1              for(i=xms;i>0;i--)
  18   1                      for(j=110;j>0;j--);
  19   1      }
  20          void di()
  21          {
  22   1              DI=0;
  23   1              delayms(500);
  24   1              DI=1;
  25   1              delayms(500);
  26   1      }
  27          
  28          u8 conn()
  29          {
  30   1              if((buff[0]==right[0])&&(buff[1]==right[1])&&(buff[2]==right[2])&&
  31   1                      (buff[3]==right[3])&&(buff[4]==right[4])&&(buff[5]==right[5]))
  32   1              return 1;
  33   1              else return 0;
  34   1      } 
  35          void display(u8 num)
  36          {
  37   1              if(which>0)
  38   1              switch(which)
  39   1                      {
  40   2                              case 1:if(num==21)which=0;s_1=num;if(num==20)which=0;buff[0]=s_1;        break;
  41   2                              case 2:if(num==21)which=1;s_2=num;if(num==20)which=1;buff[1]=s_2;        break;
  42   2                              case 3:if(num==21)which=2;s_3=num;if(num==20)which=2;buff[2]=s_3;        break;
  43   2                              case 4:if(num==21)which=3;s_4=num;if(num==20)which=3;buff[3]=s_4;    break;
  44   2                              case 5:if(num==21)which=4;s_5=num;if(num==20)which=4;buff[4]=s_5;    break;
  45   2                              case 6:if(num==21)which=5;s_6=num;if(num==20)which=5;buff[5]=s_6;        break;
  46   2                              case 7:         which=6;
  47   2                                                      if(num==21)
  48   2                                                      {
  49   3                                                              if(conn()==0)
  50   3                                                              {
  51   4                                                                      di();di();di();
  52   4                                                                      LED=1;
  53   4                                                              }
  54   3                                                              else 
  55   3                                                              {
C51 COMPILER V9.52.0.0   MMM                                                               10/23/2019 14:26:50 PAGE 2   

  56   4                                                                      LED=0;delayms(500);delayms(500);LED=1;
  57   4                                                              }
  58   3                                                              which=0;
  59   3                                                      }
  60   2                                                      break;
  61   2                              default:        which=6;                                                 break;
  62   2                      }
  63   1                      else di();
  64   1      } 
  65          void dis()
  66          {
  67   1              switch(which)
  68   1              {
  69   2               case 1:P0=distab[s_1]; P2=0x80;delayms(5);     P0=0xff;  P2=0x00;       break;
  70   2               case 2:P0=distab[s_1]; P2=0x40;delayms(5);     P0=0xff;
  71   2                              P0=distab[s_2]; P2=0x80;delayms(5);     P0=0xff;  P2=0x00;       break;
  72   2               case 3:P0=distab[s_1]; P2=0x20;delayms(5);     P0=0xff;
  73   2                              P0=distab[s_2]; P2=0x40;delayms(5);     P0=0xff;  
  74   2                              P0=distab[s_3]; P2=0x80;delayms(5);     P0=0xff;  P2=0x00;       break;
  75   2               case 4:P0=distab[s_1]; P2=0x10;delayms(5);     P0=0xff;
  76   2                              P0=distab[s_2]; P2=0x20;delayms(5);     P0=0xff;  
  77   2                              P0=distab[s_3]; P2=0x40;delayms(5);     P0=0xff;  
  78   2                              P0=distab[s_4]; P2=0x80;delayms(5);     P0=0xff;  P2=0x00;       break;
  79   2               case 5:P0=distab[s_1]; P2=0x08;delayms(5);     P0=0xff;
  80   2                              P0=distab[s_2]; P2=0x10;delayms(5);     P0=0xff;  
  81   2                              P0=distab[s_3]; P2=0x20;delayms(5);     P0=0xff;  
  82   2                              P0=distab[s_4]; P2=0x40;delayms(5);     P0=0xff;  
  83   2                              P0=distab[s_5]; P2=0x80;delayms(5);     P0=0xff;  P2=0x00;       break;
  84   2               case 6:P0=distab[s_1]; P2=0x04;delayms(5);     P0=0xff;
  85   2                              P0=distab[s_2]; P2=0x08;delayms(5);     P0=0xff;  
  86   2                              P0=distab[s_3]; P2=0x10;delayms(5);     P0=0xff;  
  87   2                              P0=distab[s_4]; P2=0x20;delayms(5);     P0=0xff;  
  88   2                              P0=distab[s_5]; P2=0x40;delayms(5);     P0=0xff;  
  89   2                              P0=distab[s_6]; P2=0x80;delayms(5);     P0=0xff;  P2=0x00;       break;
  90   2              }
  91   1      }
  92          void matrixkeyscan()                                       //matrix矩阵
  93          {
  94   1              u8 temp,key;                                               //temp临时变量
  95   1              P1=0xfe;                                                           //将第一行电平置低，其余行全为高
  96   1              temp=P1;                                                           //读取P3口当前状态的置赋予临时变量temp，用于后面计算
  97   1              temp=temp&0xf0;                                            //判断temp的高四位是否有0，如果temp的高四位有0，那么与运算后
  98   1                                                                                          //结果必然不等于0xf0;temp的高四位实际上是矩阵键盘的4个列线
  99   1                                                                                          //从而通过temp与0xf0"&"运算后的结果是否为0xf0来判断第一行是否
 100   1                                                                                          //有按键按下
 101   1              if(temp!=0xf0)                                          //“temp&0xf0”的结果，如果temp不等于0xf0，说明有键被按下
 102   1              {
 103   2                      delayms(10);                                    
 104   2                      temp=P1;                                           //重新读一次P3口数据
 105   2                      temp=temp&0xf0;                            //重新进行一次与运算
 106   2                      if(temp!=0xf0)
 107   2                      {
 108   3                              temp=P1;
 109   3                              switch(temp)
 110   3                              {
 111   4                                      case 0xee:      key=0;  which+=1;       break;
 112   4                                      case 0xde:      key=1;  which+=1;       break;
 113   4                                      case 0xbe:      key=2;  which+=1;       break;
 114   4                                      case 0x7e:      key=3;  which+=1;       break;
 115   4                              }
 116   3                              while(temp!=0xf0)                          //等待按键释放
 117   3                              {
C51 COMPILER V9.52.0.0   MMM                                                               10/23/2019 14:26:50 PAGE 3   

 118   4                                      temp=P1;
 119   4                                      temp=temp&0xf0;
 120   4                              }
 121   3                              display(key);
 122   3                      }
 123   2              }
 124   1              P1=0xfd;
 125   1              temp=P1;
 126   1              temp=temp&0xf0;
 127   1              if(temp!=0xf0)
 128   1              {
 129   2                      delayms(10);
 130   2                      temp=P1;
 131   2                      temp=temp&0xf0;
 132   2                      if(temp!=0xf0)
 133   2                      {
 134   3                              temp=P1;
 135   3                              switch(temp)
 136   3                              {
 137   4                                      case 0xed:      key=4;  which+=1;break;
 138   4                                      case 0xdd:      key=5;  which+=1;break;
 139   4                                      case 0xbd:      key=6;  which+=1;break;
 140   4                                      case 0x7d:      key=7;  which+=1;break;
 141   4                              }
 142   3                              while(temp!=0xf0)
 143   3                              {
 144   4                                      temp=P1;
 145   4                                      temp=temp&0xf0;
 146   4                              }
 147   3                              display(key);
 148   3                      }
 149   2              }
 150   1              P1=0xfb;
 151   1              temp=P1;
 152   1              temp=temp&0xf0;
 153   1              if(temp!=0xf0)
 154   1              {
 155   2                      delayms(10);
 156   2                      temp=P1;
 157   2                      temp=temp&0xf0;
 158   2                      if(temp!=0xf0)
 159   2                      {
 160   3                              temp=P1;
 161   3                              switch(temp)
 162   3                              {
 163   4                                      case 0xeb:      key=8;  which+=1;break;
 164   4                                      case 0xdb:      key=9;  which+=1;break;
 165   4      //                              case 0xbb:      key=10; which+=1;break;
 166   4      //                              case 0x7b:      key=11; which+=1;break;
 167   4                              }
 168   3                              while(temp!=0xf0)
 169   3                              {
 170   4                                      temp=P1;
 171   4                                      temp=temp&0xf0;
 172   4                              }
 173   3                              display(key);
 174   3                      }
 175   2              }
 176   1              P1=0xf7;
 177   1              temp=P1;
 178   1              temp=temp&0xf0;
 179   1              if(temp!=0xf0)
C51 COMPILER V9.52.0.0   MMM                                                               10/23/2019 14:26:50 PAGE 4   

 180   1              {
 181   2                      delayms(10);
 182   2                      temp=P1;
 183   2                      temp=temp&0xf0;
 184   2                      if(temp!=0xf0)
 185   2                      {
 186   3                              temp=P1;
 187   3                              switch(temp)
 188   3                              {
 189   4                                      case 0xe7:      key=20; break;
 190   4                                      case 0xd7:      key=21; which+=1;       break;
 191   4      //                              case 0xb7:      key=14; which+=1;break;
 192   4      //                              case 0x77:      key=15; which+=1;break;
 193   4                              }
 194   3                              while(temp!=0xf0)
 195   3                              {
 196   4                                      temp=P1;
 197   4                                      temp=temp&0xf0;
 198   4                              }
 199   3                              display(key);
 200   3                      }
 201   2              }
 202   1      }
 203          void main() 
 204          { 
 205   1              while(1) 
 206   1              { 
 207   2                      if(which==0)
 208   2                      {
 209   3                               P0=0X8C;P2=0x01;delayms(5);P0=0xff;
 210   3                               P0=0X86;P2=0x02;delayms(5);P0=0xff;
 211   3                               P0=distab[20];P2=0xfc;delayms(5);P0=0xff;
 212   3                      }
 213   2                      if(which>=1)dis();
 214   2                      matrixkeyscan();        
 215   2              } 
 216   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1017    ----
   CONSTANT SIZE    =     27    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
