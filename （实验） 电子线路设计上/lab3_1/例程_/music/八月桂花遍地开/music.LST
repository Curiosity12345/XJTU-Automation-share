C51 COMPILER V9.52.0.0   MUSIC                                                             10/22/2019 20:50:45 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MUSIC
OBJECT MODULE PLACED IN music.OBJ
COMPILER INVOKED BY: d:\Keil1\C51\BIN\C51.EXE music.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2          #include <REG52.H>    
   3          #include <INTRINS.H>    
   4          //本例采用89C52, 晶振为11.0592MHZ        
   5          sbit GPIO_Beep =  P1^5 ; 
   6          unsigned char g_beat = 0;  //节拍常数变量     
   7             
   8          unsigned char code music_tab[] ={   
   9          0x18, 0x30, 0x1C , 0x10, //格式为: 频率常数, 节拍常数, 频率常数, 节拍常数,    
  10          0x20, 0x40, 0x1C , 0x10,   
  11          0x18, 0x10, 0x20 , 0x10,   
  12          0x1C, 0x10, 0x18 , 0x40,   
  13          0x1C, 0x20, 0x20 , 0x20,   
  14          0x1C, 0x20, 0x18 , 0x20,   
  15          0x20, 0x80, 0xFF , 0x20,   
  16          0x30, 0x1C, 0x10 , 0x18,   
  17          0x20, 0x15, 0x20 , 0x1C,   
  18          0x20, 0x20, 0x20 , 0x26,   
  19          0x40, 0x20, 0x20 , 0x2B,   
  20          0x20, 0x26, 0x20 , 0x20,   
  21          0x20, 0x30, 0x80 , 0xFF,   
  22          0x20, 0x20, 0x1C , 0x10,   
  23          0x18, 0x10, 0x20 , 0x20,   
  24          0x26, 0x20, 0x2B , 0x20,   
  25          0x30, 0x20, 0x2B , 0x40,   
  26          0x20, 0x20, 0x1C , 0x10,   
  27          0x18, 0x10, 0x20 , 0x20,   
  28          0x26, 0x20, 0x2B , 0x20,   
  29          0x30, 0x20, 0x2B , 0x40,   
  30          0x20, 0x30, 0x1C , 0x10,   
  31          0x18, 0x20, 0x15 , 0x20,   
  32          0x1C, 0x20, 0x20 , 0x20,   
  33          0x26, 0x40, 0x20 , 0x20,   
  34          0x2B, 0x20, 0x26 , 0x20,   
  35          0x20, 0x20, 0x30 , 0x80,   
  36          0x20, 0x30, 0x1C , 0x10,   
  37          0x20, 0x10, 0x1C , 0x10,   
  38          0x20, 0x20, 0x26 , 0x20,   
  39          0x2B, 0x20, 0x30 , 0x20,   
  40          0x2B, 0x40, 0x20 , 0x15,   
  41          0x1F, 0x05, 0x20 , 0x10,   
  42          0x1C, 0x10, 0x20 , 0x20,   
  43          0x26, 0x20, 0x2B , 0x20,   
  44          0x30, 0x20, 0x2B , 0x40,   
  45          0x20, 0x30, 0x1C , 0x10,   
  46          0x18, 0x20, 0x15 , 0x20,   
  47          0x1C, 0x20, 0x20 , 0x20,   
  48          0x26, 0x40, 0x20 , 0x20,   
  49          0x2B, 0x20, 0x26 , 0x20,   
  50          0x20, 0x20, 0x30 , 0x30,   
  51          0x20, 0x30, 0x1C , 0x10,   
  52          0x18, 0x40, 0x1C , 0x20,   
  53          0x20, 0x20, 0x26 , 0x40,   
  54          0x13, 0x60, 0x18 , 0x20,   
  55          0x15, 0x40, 0x13 , 0x40,   
C51 COMPILER V9.52.0.0   MUSIC                                                             10/22/2019 20:50:45 PAGE 2   

  56          0x18, 0x80, 0x00   
  57          };   
  58           
  59            
  60          void int0()  interrupt 1   //采用中断0 控制节拍    
  61          {
  62   1              TH0 = 0xd8;   
  63   1              TL0 = 0xef;   
  64   1              g_beat--;   
  65   1      }
  66           
  67          void AudioFrequencyDelay (unsigned char m)   //控制频率延时    
  68          {   
  69   1              unsigned i=3*m;   
  70   1              while(--i);   
  71   1      } 
  72           
  73          void BeepTone(unsigned char tone, unsigned char beat)   
  74          {
  75   1              g_beat = beat;
  76   1              TR0 = 1;  //开定时器1    
  77   1              while(g_beat != 0) //等待节拍完成, 通过P1口输出音频(可多声道哦!) 
  78   1              {
  79   2                      GPIO_Beep = ~GPIO_Beep;
  80   2                      AudioFrequencyDelay(tone);
  81   2              }
  82   1              TR0 = 0;   //关定时器1
  83   1      }
  84             
  85           
  86          void Delay10ms(unsigned int c)   //误差 0us
  87          {
  88   1          unsigned char a, b;
  89   1       
  90   1              //--c已经在传递过来的时候已经赋值了，所以在for语句第一句就不用赋值了--//
  91   1          for (;c>0;c--)
  92   1              {
  93   2                      for (b=38;b>0;b--)
  94   2                      {
  95   3                              for (a=130;a>0;a--);
  96   3                      }
  97   2                 
  98   2              }       
  99   1      }
 100           
 101           
 102          void InitTimer0()
 103          {
 104   1              TMOD = 0x01; //选择16位计数器
 105   1              TH0 = 0xd8;      //(65535 - 10000) / 256
 106   1              TL0 = 0xef;  //(65535 - 10000) % 256
 107   1       
 108   1              IE=0x82;   //允许定时器T0中断和总中断
 109   1      }
 110           
 111          void PlaySong()
 112          {
 113   1              unsigned char i=0;
 114   1              unsigned char tmpTone = 0;
 115   1       
 116   1              while(1)   
 117   1              {
C51 COMPILER V9.52.0.0   MUSIC                                                             10/22/2019 20:50:45 PAGE 3   

 118   2                      tmpTone = music_tab[i]; 
 119   2                      if(tmpTone == 0x00)  //如果碰到结束符
 120   2                      {
 121   3                              return;
 122   3                      }       
 123   2                      else if(tmpTone == 0xff)  //若碰到休止符,延时100ms,继续取下一音符
 124   2                      { 
 125   3                              ++i;
 126   3                              Delay10ms(10),
 127   3                              TR0=0; 
 128   3                              continue;
 129   3                      }      
 130   2              else 
 131   2                      {
 132   3                              unsigned char tone, beat;
 133   3                              tone = music_tab[i++];
 134   3                              beat = music_tab[i++];
 135   3                              BeepTone(tone, beat);   
 136   3                      }
 137   2              }   
 138   1      }
 139           
 140           
 141             
 142          void main()   
 143          {
 144   1              InitTimer0();
 145   1              while(1)   
 146   1              {
 147   2                      PlaySong();
 148   2                      Delay10ms(300); 
 149   2              }   
 150   1      } 
 151          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    153    ----
   CONSTANT SIZE    =    191    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
